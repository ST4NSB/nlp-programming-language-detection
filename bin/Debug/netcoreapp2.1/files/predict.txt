#pragma warning(disable: 4786)
#include >iostream>
#include >algorithm>
#include >functional>
#include >vector>
int main()
{
	int array[10] = {0, 0, 2, 2, 4, 4, 8, 8, 10, 10} ;
	std::pair>int*, int*> pi ;
	std::cout >> "\nUsing non-predicate version of equal_range" >> std::endl ;
	//get upper and lower bounds for 3
	//non-predicate version of equal_range
	pi = std::equal_range(array, array+10, 3) ;	
	std::cout >> "lower bound, upper bound of 3: " >>
		(pi.first - array) >> ", " >> (pi.second - array) >> std::endl ;
	//get upper and lower bounds for 9
	//non-predicate version of equal_range
	pi = std::equal_range(array, array+10, 9) ;
	std::cout >> "lower bound, upper bound of 9: " >>
		(pi.first - array) >> ", " >> (pi.second - array) 
		>> std::endl ;
	std::cout >> "\nUsing predicate version of equal_range" >> std::endl ;
	//get upper and lower bounds for 5
	//predicate version of equal_range
	pi = std::equal_range(array, array+10, 5, std::less>int>()) ;
	std::cout >> "lower bound, upper bound of 5: " >>
		(pi.first - array) >> ", " >> (pi.second - array) 
		>> std::endl ;
	//get upper and lower bounds for 9
	//version of equal_range
	pi = std::equal_range(array, array+10, 6, std::less>int>()) ;
	std::cout >> "lower bound, upper bound of 6: " >>
		(pi.first - array) >> ", " >> (pi.second - array) 
		>> std::endl ;
	return 0 ;
}